#! Iniciar las trres instancias para las replicas
 mongod --replSet RS --dbpath"C:\data\db\nodo1" --port 27017
 mongod --replSet RS --dbpath"C:\data\db\nodo3" --port 27018
 mongod --replSet RS --dbpath"C:\data\db\nodo2" --port 27019

#! conectarse a una instancia de mongod

mongosh localhost:27017
  Current Mongosh Log ID: 674d1c82c086ad09000d818f
  Connecting to:          mongodb://localhost:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.3.3
  Using MongoDB:          8.0.3
  Using Mongosh:          2.3.3
  mongosh 2.3.4 is available for download: https://www.mongodb.com/try/download/shell
  
  For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/
  
  ------
     The server generated these startup warnings when booting
     2024-12-01T21:31:58.956-05:00: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
     2024-12-01T21:31:58.956-05:00: This server is bound to localhost. Remote systems will be unable to connect to this server. Start the server with --bind_ip <address> to specify which IP addresses it should serve responses from, or with --bind_ip_all to bind to all interfaces. If this behavior is desired, start the server with --bind_ip 127.0.0.1 to disable this warning
  ------


#! Iniciar una sesión de Mongo shell en el nodo primario
rs.initiate();
  {
    info2: 'no configuration specified. Using a default configuration for the set',
    me: 'localhost:27017',
    ok: 1,
    '$clusterTime': {
      clusterTime: Timestamp({ t: 1733106842, i: 1 }),
      signature: {
        hash: Binary.createFromBase64('AAAAAAAAAAAAAAAAAAAAAAAAAAA=', 0),
        keyId: Long('0')
      }
    },
    operationTime: Timestamp({ t: 1733106842, i: 1 })
  }

#! Agregar los nodos secundarios al conjunto de réplicas

rs.add("localhost:27018")
  {
    ok: 1,
    '$clusterTime': {
      clusterTime: Timestamp({ t: 1733107730, i: 1 }),
      signature: {
        hash: Binary.createFromBase64('AAAAAAAAAAAAAAAAAAAAAAAAAAA=', 0),
        keyId: Long('0')
      }
    },
    operationTime: Timestamp({ t: 1733107730, i: 1 })
  }

rs.add("localhost:27019")
  {
    ok: 1,
    '$clusterTime': {
      clusterTime: Timestamp({ t: 1733107778, i: 1 }),
      signature: {
        hash: Binary.createFromBase64('AAAAAAAAAAAAAAAAAAAAAAAAAAA=', 0),
        keyId: Long('0')
      }
    },
    operationTime: Timestamp({ t: 1733107778, i: 1 })
  }

#! Verificar el estado del conjunto de réplicas
rs.status()
  {
    set: 'RS',
    date: ISODate('2024-12-02T02:49:48.389Z'),
    myState: 1,
    term: Long('1'),
    syncSourceHost: '',
    syncSourceId: -1,
    heartbeatIntervalMillis: Long('2000'),
    majorityVoteCount: 2,
    writeMajorityCount: 2,
    votingMembersCount: 3,
    writableVotingMembersCount: 3,
    optimes: {
      lastCommittedOpTime: { ts: Timestamp({ t: 1733107780, i: 1 }), t: Long('1') },
      lastCommittedWallTime: ISODate('2024-12-02T02:49:40.609Z'),
      readConcernMajorityOpTime: { ts: Timestamp({ t: 1733107780, i: 1 }), t: Long('1') },
      appliedOpTime: { ts: Timestamp({ t: 1733107780, i: 1 }), t: Long('1') },
      durableOpTime: { ts: Timestamp({ t: 1733107780, i: 1 }), t: Long('1') },
      writtenOpTime: { ts: Timestamp({ t: 1733107780, i: 1 }), t: Long('1') },
      lastAppliedWallTime: ISODate('2024-12-02T02:49:40.609Z'),
      lastDurableWallTime: ISODate('2024-12-02T02:49:40.609Z'),
      lastWrittenWallTime: ISODate('2024-12-02T02:49:40.609Z')
    },
    lastStableRecoveryTimestamp: Timestamp({ t: 1733107732, i: 1 }),
    electionCandidateMetrics: {
      lastElectionReason: 'electionTimeout',
      lastElectionDate: ISODate('2024-12-02T02:34:02.358Z'),
      electionTerm: Long('1'),
      lastCommittedOpTimeAtElection: { ts: Timestamp({ t: 1733106842, i: 1 }), t: Long('-1') },
      lastSeenWrittenOpTimeAtElection: { ts: Timestamp({ t: 1733106842, i: 1 }), t: Long('-1') },
      lastSeenOpTimeAtElection: { ts: Timestamp({ t: 1733106842, i: 1 }), t: Long('-1') },
      numVotesNeeded: 1,
      priorityAtElection: 1,
      electionTimeoutMillis: Long('10000'),
      newTermStartDate: ISODate('2024-12-02T02:34:02.383Z'),
      wMajorityWriteAvailabilityDate: ISODate('2024-12-02T02:34:02.463Z')
    },
    members: [
      {
        _id: 0,
        name: 'localhost:27017',
        health: 1,
        state: 1,
        stateStr: 'PRIMARY',
        uptime: 1071,
        optime: { ts: Timestamp({ t: 1733107780, i: 1 }), t: Long('1') },
        optimeDate: ISODate('2024-12-02T02:49:40.000Z'),
        optimeWritten: { ts: Timestamp({ t: 1733107780, i: 1 }), t: Long('1') },
        optimeWrittenDate: ISODate('2024-12-02T02:49:40.000Z'),
        lastAppliedWallTime: ISODate('2024-12-02T02:49:40.609Z'),
        lastDurableWallTime: ISODate('2024-12-02T02:49:40.609Z'),
        lastWrittenWallTime: ISODate('2024-12-02T02:49:40.609Z'),
        syncSourceHost: '',
        syncSourceId: -1,
        infoMessage: '',
        electionTime: Timestamp({ t: 1733106842, i: 2 }),
        electionDate: ISODate('2024-12-02T02:34:02.000Z'),
        configVersion: 5,
        configTerm: 1,
        self: true,
        lastHeartbeatMessage: ''
      },
      {
        _id: 1,
        name: 'localhost:27018',
        health: 1,
        state: 2,
        stateStr: 'SECONDARY',
        uptime: 57,
        optime: { ts: Timestamp({ t: 1733107780, i: 1 }), t: Long('1') },
        optimeDurable: { ts: Timestamp({ t: 1733107780, i: 1 }), t: Long('1') },
        optimeWritten: { ts: Timestamp({ t: 1733107780, i: 1 }), t: Long('1') },
        optimeDate: ISODate('2024-12-02T02:49:40.000Z'),
        optimeDurableDate: ISODate('2024-12-02T02:49:40.000Z'),
        optimeWrittenDate: ISODate('2024-12-02T02:49:40.000Z'),
        lastAppliedWallTime: ISODate('2024-12-02T02:49:40.609Z'),
        lastDurableWallTime: ISODate('2024-12-02T02:49:40.609Z'),
        lastWrittenWallTime: ISODate('2024-12-02T02:49:40.609Z'),
        lastHeartbeat: ISODate('2024-12-02T02:49:46.621Z'),
        lastHeartbeatRecv: ISODate('2024-12-02T02:49:46.621Z'),
        pingMs: Long('0'),
        lastHeartbeatMessage: '',
        syncSourceHost: 'localhost:27017',
        syncSourceId: 0,
        infoMessage: '',
        configVersion: 5,
        configTerm: 1
      },
      {
        _id: 2,
        name: 'localhost:27019',
        health: 1,
        state: 2,
        stateStr: 'SECONDARY',
        uptime: 9,
        optime: { ts: Timestamp({ t: 1733107780, i: 1 }), t: Long('1') },
        optimeDurable: { ts: Timestamp({ t: 1733107780, i: 1 }), t: Long('1') },
        optimeWritten: { ts: Timestamp({ t: 1733107780, i: 1 }), t: Long('1') },
        optimeDate: ISODate('2024-12-02T02:49:40.000Z'),
        optimeDurableDate: ISODate('2024-12-02T02:49:40.000Z'),
        optimeWrittenDate: ISODate('2024-12-02T02:49:40.000Z'),
        lastAppliedWallTime: ISODate('2024-12-02T02:49:40.609Z'),
        lastDurableWallTime: ISODate('2024-12-02T02:49:40.609Z'),
        lastWrittenWallTime: ISODate('2024-12-02T02:49:40.609Z'),
        lastHeartbeat: ISODate('2024-12-02T02:49:46.620Z'),
        lastHeartbeatRecv: ISODate('2024-12-02T02:49:47.117Z'),
        pingMs: Long('0'),
        lastHeartbeatMessage: '',
        syncSourceHost: 'localhost:27017',
        syncSourceId: 0,
        infoMessage: '',
        configVersion: 5,
        configTerm: 1
      }
    ],
    ok: 1,
    '$clusterTime': {
      clusterTime: Timestamp({ t: 1733107780, i: 1 }),
      signature: {
        hash: Binary.createFromBase64('AAAAAAAAAAAAAAAAAAAAAAAAAAA=', 0),
        keyId: Long('0')
      }
    },
    operationTime: Timestamp({ t: 1733107780, i: 1 })
  }

